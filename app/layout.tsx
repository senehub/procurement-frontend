import { ReactNode, Suspense } from "react";
import type { Metadata } from "next";
import localFont from "next/font/local";
import AppQueryClient from "./query-client";
import { Toaster } from "@/components/ui/toaster";
import { Navbar } from "@/components/navbar";
import Footer from "@/components/footer";
import "./globals.css";
import { AuthenticationProvider } from "@/providers/auth-provider";
import AppProvider from "@/providers/app-provider";
import AppThemeProvider from "@/providers/theme-provider";
import { auth } from "@clerk/nextjs/server";
import Loading from "./loading";
import DefaultPasswordBanner from "@/components/default-password-banner";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "E-Procurement System",
  description: "Generated by create next app",
};

type Props = {
  children: ReactNode;
};

export default async function RootLayout({ children }: Props) {
  const authData = await auth();

  const userType = authData.sessionClaims?.userType;
  const onBoarded = authData.sessionClaims?.onBoarded;
  const hasDefaultPassword = authData.sessionClaims?.hasDefaultPassword;

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistMono.className} ${geistSans.className} bg-background text-foreground`}
      >
        <AppThemeProvider>
          <AuthenticationProvider>
            <AppQueryClient>
              <AppProvider
                userId={authData.userId}
                sessionClaims={authData.sessionClaims}
              >
                <Suspense fallback={<Loading />}>
                  {authData.userId && (
                    <Navbar onBoarded={onBoarded} userType={userType} />
                  )}
                  {/* <pre>
                  <code>{JSON.stringify(authData.sessionClaims, null, 4)}</code>
                </pre> */}
                  {hasDefaultPassword && <DefaultPasswordBanner />}
                  {children}
                </Suspense>
                <Toaster />
                {authData.userId && <Footer />}
              </AppProvider>
            </AppQueryClient>
          </AuthenticationProvider>
        </AppThemeProvider>
      </body>
    </html>
  );
}
